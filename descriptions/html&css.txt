 # HTML
 
 html validator # for check your error

example: paragraph element -> <p>(opening tag) content(also images have no content) </p>(closing tag)

## extensions: 
- image prewiew
- auto rename tag
- live server
- color highlight

##HTML Entities

## settings
- auto close tag

## Start

1. <!DOCTYPE html> # declare doc type to tell the browser that this doc use hTML.
2. <html></html> # html element
3. <head> </head> # head element inside html element (include title, additional info about page, link to css files, ...)
* <title></title> # subset of head (inside of head)
4. <body></body> #  body element next and out of head but inside of html element
5. <h1></h1> # head of text that has h1 to h6 and go to smaller size of font (every page should be have h1)
6. <p></p> # paragraph
7. <!-- --> # comment
8. 
  - <strong></strong> # bold a part of text
  - <b></b> # bold a part of text
  - <i></i> # italic a part of text
  - <em></em> # italic a part of text
9. 
  - <ol></ol> # order list
  - <li></li> # for each item of list and it must be in ol
10.
  - <ul></ul> # unorder list
  - <li></li> # for each item of list and it must be in ul
  
### attributes
11. 
  - <img src="directory of image" alt="description of image" height="" weight="" />
  - <html lang="en"></html> # html element and set language
  - <meta charset="UTF-8" # set character
  
12. href is attribute that create link
  - <a href="url">title of link</a> # open website that is outside of our website in this tab 
  - <a href="url" target="_blank">title of link</a> # open website that is outside of our website in new tab
  - <a href="name of html that you create for example: blog.html">title of link</a> # open page that is inside of our website in this tab 
  - <a href="#">title of link</a> # open nothing and just go to above the webpage

13.
  - <nav></nav> # group navigation links in a container
  - <header></header> # group header text like h1 or somthing like this that we want separate them from other contents
  - <article></article> # group other content except header
    - <header></header> # group header content of article

14. <aside></aside> # group that is the closure of main content
15. <footer></footer> # craete a footer
16. <div></div> # for group contents when we use this element the group has no semantic meaning for us and just we want group them

# FUNDAMENTAL CSS

## Inline 
<h1 style="color : blue"></h1> declare style in html's elements

## Internal
<style> h1 {color: blue}></style> # declare style element in head.

## External 
h1 {color: blue} # create css file write code like this.
<link href="directory of css file" rel="description" /> # link html file to css file

## Selector Examples
 
example1:
h1 {
  color: #1098ad; # font color
  font-size: 26px; # font size
  font-family: sans-serif; # kind of font
  text-transform: uppercase; # characters form
  font-style: italic; # style
  text-align: center; # alignment
  background-color: #f7f7f7; #background color
}

example2:
h1,h2,h3,h4,p,li {font-family: sans-serif; } # we can list selector to attribute the same features to them

#id {font-family: sans-serif;} # specify selector by id (id is unic) we dont use id mainly.
.class {font-family: sans-serif;} # specify selector by class
/* */ # comment

example3:
.related-list {list-style: none;} # points remove

## colors
rgb : #ff ff ff (hexadecimal)

example4:
.related-aside {
  background-color: #f7f7f7; # background color
  border-top: 5px solid #1098ad; # border top size, form, color
  border-bottom: 5px solid #1098ad; # border bottom  size, form, color
}

example5:
li:first-child {
  font-weight: bold; # convert all first item of every li elements to bold.
}

example6:
li:nth-child(2) {
  color: #1098ad; # colored second item of every li elements.
}

example7:
article p:last-child {
  color: #1098ad;       #colored the last child of article if it was p, but if p was not the last on this code is incurrect.
}

## Link Styles
a:link {
  color: #1098ad;        # link style
  text-decoration: none; # underline of links
}

a:visited {
  color: #1098ad;  # link that visited style
}

a:hover {
  color: orangered;
  font-weight: bold;			# when you move mouse on link style
  text-decoration: underline  orangered;
}

a:active {
  background-color: black;	# when you click on link style
  font-style: italic;
}

## chrome dev tools
right click >> inspect >> elements 

- on right side you can see style of each part you click on it

* {
  color:red;  # all of elements get red color
}
	

## Resolve conflicting delaration
priority (high to low): #id -> .class -> element selector(p, li, div, ...) -> universal selector(*) and in same priority the last one is higher priority yhan other
priority (high to low): psudo class -> element selector

## Inheritance 
some properties (like text)  get inherited from parents to child but can easily overwrite same properties that there is in child.

## The CSS box model
1.content # text, image, table, ...
2.border # line around box
3.padding # space inside
4.margin # space outside

- if you margin-bottem for top element, and margin top for bottem element, the bigger one applied.
example1:
.main-header {
  padding-left: 40px;
  padding: 20px 40px; # bottem-top  left-right
  margin-bottom: 60px;
  width: 500px; # width of element box
}

example2:
.post-img {
  width: 100%; # 100% of container(parent) of the current element width
  height: auto;
}

example3:
.container {	# all of elements are in container
  width: 700px; # the children not be wider than parent.
  margin-left: auto; # means margin of left equals right and depends on page size (as a result container been in center)
  margin-right: auto;
}

## different boxes or elements
1. inline boxes # spacing content's size (strong, a, ...) -> margin and padding applies in horizontally not top or bottom
nav a:link {
  display: block; # convert to block level
}

2. block-level boxes # spacing all of parent's element width
nav a:link {
  display: inline; # convert to inline
}

3.inline-block box 
- looks like inline (spacing content's size), behave like block level (margin and padding applies all of side)
nav a:link {
  display: inline-block; # convert to inline-block
}

## Positioning
1.normal flow
2.absolute positioning # fixed

example1:
position: relative; # in this example is parent
button {
  position: absolute;
  bottom: 50px;		# child # this absolutely fixed (with 50px from right and 50px from bottom of parent that set to relative.
  right: 50px;
}

## Psudo elements

example1:
h1::first-letter {
  font-style: normal;
}

example2:
h3 + p::first-line {  #the p elements that are exactly next of h3s first line (adjancy elements)
  color: red;
}

### Create psudo element in css # no exist this element in html
example:
h2 {
  position: relative; # for position the child, parent must be relative
}

h2::after {			#create element after h2
  content: "Top";
  color: #444;
  background-color: #ffe70e;
  font-size: 16px;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: -25px;
}


